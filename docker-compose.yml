name: fs2-part4-team3-be

services:
  postgres:
    image: postgres:15
    container_name: moving-postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: fs2_part4_team3_be
      POSTGRES_DB: moving_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nestjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: moving-nestjs
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: fs2_part4_team3_be
      DATABASE_NAME: moving_db
      DATABASE_URL: postgresql://postgres:fs2_part4_team3_be@postgres:5432/moving_db?schema=public
    env_file:
      - .env

  nginx:
    container_name: nginx-proxy
    restart: always
    image: nginx:alpine
    # build:
    #   context: .
    #   dockerfile: Dockerfile.nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.init.conf
      - ./ssl/certs:/etc/ssl/certs
      - ./ssl/private:/etc/ssl/private
    depends_on:
      - nestjs
    command: '/bin/sh -c ''while :; do sleep 3d & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 60d & wait $${!}; done;'"

volumes:
  postgres_data:
